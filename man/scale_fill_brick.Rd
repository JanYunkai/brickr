% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_brick.R
\name{scale_fill_brick}
\alias{scale_fill_brick}
\title{Create your own discrete scale}
\usage{
scale_fill_brick(brick_theme = "classic", ...)
}
\arguments{
\item{brick_theme}{Color options for brickr.}

\item{...}{Other parameters from ggplots::scale_fill_manual().}
}
\description{
These functions allow you to specify your own set of mappings from levels in the
data to aesthetic values.
}
\details{
The functions \code{scale_colour_manual()}, \code{scale_fill_manual()}, \code{scale_size_manual()},
etc. work on the aesthetics specified in the scale name: \code{colour}, \code{fill}, \code{size},
etc. However, the functions \code{scale_colour_manual()} and \code{scale_fill_manual()} also
have an optional \code{aesthetics} argument that can be used to define both \code{colour} and
\code{fill} aesthetic mappings via a single function call (see examples). The function
\code{scale_discrete_manual()} is a generic scale that can work with any aesthetic or set
of aesthetics provided via the \code{aesthetics} argument.
}
\section{Color Blindness}{

Many color palettes derived from RGB combinations (like the "rainbow" color
palette) are not suitable to support all viewers, especially those with
color vision deficiencies. Using \code{viridis} type, which is perceptually
uniform in both colour and black-and-white display is an easy option to
ensure good perceptive properties of your visulizations.
The colorspace package offers functionalities
\itemize{
\item to generate color palettes with good perceptive properties,
\item to analyse a given color palette, like emulating color blindness,
\item and to modify a given color palette for better perceptivity.
}

For more information on color vision deficiencies and suitable color choices
see the \href{https://arxiv.org/abs/1903.06490}{paper on the colorspace package}
and references therein.
}

\examples{
p <- ggplot(mtcars, aes(mpg, wt)) +
  geom_point(aes(colour = factor(cyl)))
p + scale_colour_manual(values = c("red", "blue", "green"))
}
